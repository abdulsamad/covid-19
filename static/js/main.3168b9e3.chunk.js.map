{"version":3,"sources":["assets/indiaFlag.png","components/Nav.js","components/Loader.js","components/India.js","components/Autocomplete.js","components/Global.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","title","alignLinks","brand","className","href","centerLogo","id","menuIcon","options","draggable","edge","inDuration","onCloseEnd","onCloseStart","onOpenEnd","onOpenStart","outDuration","preventScrolling","Loader","active","color","flashing","size","India","useState","loading","setLoading","count","setCount","tests","setTests","states","setStates","stateDistrict","setStateDistrict","useEffect","fetch","then","res","json","statewise","tested","pop","slice","formatNumber","num","toString","includes","Intl","NumberFormat","maximumSignificantDigits","format","src","indiaFlag","alt","height","width","lastupdatedtime","confirmed","s","recovered","deaths","totalsamplestested","updatetimestamp","testsconductedbyprivatelabs","source","fullscreen","duration","indicators","interval","image","placement","rel","target","role","aria-label","centered","hoverable","responsive","striped","data-field","map","state","key","delta","accordion","stateVal","expanded","header","icon","node","districtData","distVal","district","Autocomplete","updateSearched","countries","setCountries","slugs","setSlugs","obj","Country","trim","Slug","data","limit","onAutocomplete","country","name","slug","placeholder","Global","setloading","newCases","setNewCases","lastUpdated","setLastUpdated","Countries","current","totalCount","TotalConfirmed","TotalRecovered","TotalDeaths","newCount","NewConfirmed","NewRecovered","NewDeaths","Date","undefined","Footer","copyrights","App","setCountry","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3168b9e3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/indiaFlag.ced5790f.png\";","import React from 'react';\nimport { Navbar } from 'react-materialize';\n\nfunction Nav({ title }) {\n\treturn (\n\t\t<header>\n\t\t\t<Navbar\n\t\t\t\talignLinks='right'\n\t\t\t\tbrand={\n\t\t\t\t\t<a className='brand-logo' href='#!'>\n\t\t\t\t\t\t{title}\n\t\t\t\t\t</a>\n\t\t\t\t}\n\t\t\t\tcenterLogo\n\t\t\t\tid='nav'\n\t\t\t\tmenuIcon={false}\n\t\t\t\toptions={{\n\t\t\t\t\tdraggable: true,\n\t\t\t\t\tedge: 'left',\n\t\t\t\t\tinDuration: 250,\n\t\t\t\t\tonCloseEnd: null,\n\t\t\t\t\tonCloseStart: null,\n\t\t\t\t\tonOpenEnd: null,\n\t\t\t\t\tonOpenStart: null,\n\t\t\t\t\toutDuration: 200,\n\t\t\t\t\tpreventScrolling: true,\n\t\t\t\t}}></Navbar>\n\t\t</header>\n\t);\n}\n\nexport default Nav;\n","import React from 'react';\nimport { Preloader } from 'react-materialize';\n\nfunction Loader() {\n\treturn (\n\t\t<section className='section center-align loader-container'>\n\t\t\t<Preloader active color='red' flashing={false} size='big' />\n\t\t</section>\n\t);\n}\n\nexport default Loader;\n","import React, { useEffect, useState, Fragment } from 'react';\nimport indiaFlag from '../assets/indiaFlag.png';\nimport {\n\tRow,\n\tCol,\n\tCard,\n\tIcon,\n\tCollapsible,\n\tCollapsibleItem,\n\tTable,\n\tSlider,\n\tSlide,\n\tCaption,\n} from 'react-materialize';\nimport Loader from './Loader';\n\nfunction India() {\n\tconst [loading, setLoading] = useState(true);\n\tconst [count, setCount] = useState({});\n\tconst [tests, setTests] = useState({});\n\tconst [states, setStates] = useState([]);\n\tconst [stateDistrict, setStateDistrict] = useState([]);\n\n\tuseEffect(() => {\n\t\tfetch('https://api.covid19india.org/data.json')\n\t\t\t.then((res) => res.json())\n\t\t\t.then((res) => {\n\t\t\t\tsetCount(res.statewise[0]);\n\t\t\t\tsetTests(res.tested.pop());\n\t\t\t\tsetStates(res.statewise.slice(1));\n\t\t\t});\n\t\tfetch('https://api.covid19india.org/v2/state_district_wise.json')\n\t\t\t.then((res) => res.json())\n\t\t\t.then((res) => {\n\t\t\t\tsetStateDistrict(res);\n\n\t\t\t\t/* Loading */\n\t\t\t\tsetLoading(false);\n\t\t\t});\n\t}, []);\n\n\tconst formatNumber = (num) => {\n\t\tconst numStr = num.toString();\n\t\tif (numStr.includes(',')) {\n\t\t\treturn num;\n\t\t} else {\n\t\t\treturn new Intl.NumberFormat('en-IN', { maximumSignificantDigits: 8 }).format(num);\n\t\t}\n\t};\n\n\tif (!loading) {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<section className='center-align'>\n\t\t\t\t\t<h4>INDIA</h4>\n\t\t\t\t\t<img src={indiaFlag} alt='Indian Flag' height='120px' width='200px' />\n\t\t\t\t\t<div className='center-align mtb-1'>Last Updated On: {count.lastupdatedtime}</div>\n\t\t\t\t</section>\n\n\t\t\t\t{/* Count */}\n\t\t\t\t<section className='section'>\n\t\t\t\t\t<h5 className='center-align'>Count</h5>\n\t\t\t\t\t<Card className='count'>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t{count.confirmed && (\n\t\t\t\t\t\t\t\t<Col s={6} className='total-cases'>\n\t\t\t\t\t\t\t\t\t<h5 className='center-align'>Total</h5>\n\t\t\t\t\t\t\t\t\t<h5 className='center-align'>{formatNumber(count.confirmed)}</h5>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{count.active && (\n\t\t\t\t\t\t\t\t<Col s={6} className='total-active'>\n\t\t\t\t\t\t\t\t\t<h5 className='center-align'>Active</h5>\n\t\t\t\t\t\t\t\t\t<h5 className='center-align'>{formatNumber(count.active)}</h5>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t{count.recovered && (\n\t\t\t\t\t\t\t\t<Col s={6} className='total-recovered'>\n\t\t\t\t\t\t\t\t\t<h5 className='center-align'>Recovered</h5>\n\t\t\t\t\t\t\t\t\t<h5 className='center-align'>{formatNumber(count.recovered)}</h5>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{count.deaths && (\n\t\t\t\t\t\t\t\t<Col s={6} className='total-deaths'>\n\t\t\t\t\t\t\t\t\t<h5 className='center-align'>Deaths</h5>\n\t\t\t\t\t\t\t\t\t<h5 className='center-align'>{formatNumber(count.deaths)}</h5>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<div className='center-align'>\n\t\t\t\t\t\t\t<blockquote>Source: covid19india.org</blockquote>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Card>\n\t\t\t\t</section>\n\n\t\t\t\t{/* Testing */}\n\t\t\t\t<section className='section'>\n\t\t\t\t\t<h5 className='center-align'>Testing</h5>\n\t\t\t\t\t<Card className='testing'>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t{tests.totalsamplestested && (\n\t\t\t\t\t\t\t\t<Col s={6}>\n\t\t\t\t\t\t\t\t\t<h5 className='center-align'>Sample Tested</h5>\n\t\t\t\t\t\t\t\t\t<h5 className='center-align'>{formatNumber(tests.totalsamplestested)}</h5>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{tests.updatetimestamp && (\n\t\t\t\t\t\t\t\t<Col s={6}>\n\t\t\t\t\t\t\t\t\t<h5 className='center-align'>Last Updated</h5>\n\t\t\t\t\t\t\t\t\t<h5 className='center-align'>{tests.updatetimestamp}</h5>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t{tests.testsconductedbyprivatelabs && (\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Col s={6}>\n\t\t\t\t\t\t\t\t\t<h5 className='center-align'>Tested by Private labs</h5>\n\t\t\t\t\t\t\t\t\t<h5 className='center-align'>\n\t\t\t\t\t\t\t\t\t\t{formatNumber(tests.testsconductedbyprivatelabs)}\n\t\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<div className='center-align'>\n\t\t\t\t\t\t\t<blockquote>Source: {tests.source}</blockquote>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Card>\n\t\t\t\t</section>\n\n\t\t\t\t{/* Slider */}\n\t\t\t\t<Slider\n\t\t\t\t\tclassName='z-depth-1'\n\t\t\t\t\tfullscreen={false}\n\t\t\t\t\toptions={{\n\t\t\t\t\t\tduration: 500,\n\t\t\t\t\t\theight: 140,\n\t\t\t\t\t\tindicators: false,\n\t\t\t\t\t\tinterval: 3000,\n\t\t\t\t\t}}>\n\t\t\t\t\t<Slide image={false}>\n\t\t\t\t\t\t<Caption placement='center'>\n\t\t\t\t\t\t\t<h5 className='blue-text'>STAY home</h5>\n\t\t\t\t\t\t</Caption>\n\t\t\t\t\t</Slide>\n\t\t\t\t\t<Slide image={false}>\n\t\t\t\t\t\t<Caption placement='center'>\n\t\t\t\t\t\t\t<h5 className='blue-text'>KEEP a safe distance</h5>\n\t\t\t\t\t\t</Caption>\n\t\t\t\t\t</Slide>\n\t\t\t\t\t<Slide image={false}>\n\t\t\t\t\t\t<Caption placement='center'>\n\t\t\t\t\t\t\t<h5 className='blue-text'>Do Physical Distancing But, Show Social Solidarity</h5>\n\t\t\t\t\t\t</Caption>\n\t\t\t\t\t</Slide>\n\t\t\t\t\t<Slide image={false}>\n\t\t\t\t\t\t<Caption placement='center'>\n\t\t\t\t\t\t\t<h5 className='blue-text'>WASH hands often</h5>\n\t\t\t\t\t\t</Caption>\n\t\t\t\t\t</Slide>\n\t\t\t\t\t<Slide image={false}>\n\t\t\t\t\t\t<Caption placement='center'>\n\t\t\t\t\t\t\t<h5 className='blue-text'>COVER your cough</h5>\n\t\t\t\t\t\t</Caption>\n\t\t\t\t\t</Slide>\n\t\t\t\t\t<Slide image={false}>\n\t\t\t\t\t\t<Caption placement='center'>\n\t\t\t\t\t\t\t<h5 className='blue-text'>\n\t\t\t\t\t\t\t\tSICK? Call the helpline.Check Details{' '}\n\t\t\t\t\t\t\t\t<a rel='noreferrer noopener' target='_blank' href='https://www.mygov.in/covid-19/'>\n\t\t\t\t\t\t\t\t\t<span role='img' aria-label='Link'>\n\t\t\t\t\t\t\t\t\t\t🔗\n\t\t\t\t\t\t\t\t\t</span>{' '}\n\t\t\t\t\t\t\t\t\tHere\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t</Caption>\n\t\t\t\t\t</Slide>\n\t\t\t\t\t<Slide image={false}>\n\t\t\t\t\t\t<Caption placement='center'>\n\t\t\t\t\t\t\t<h5 className='blue-text'>\n\t\t\t\t\t\t\t\tCheck More Details{' '}\n\t\t\t\t\t\t\t\t<a rel='noreferrer noopener' target='_blank' href='https://who.int'>\n\t\t\t\t\t\t\t\t\tWHO Official Website\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t</Caption>\n\t\t\t\t\t</Slide>\n\t\t\t\t</Slider>\n\n\t\t\t\t{/* State Wise */}\n\t\t\t\t<section className='section'>\n\t\t\t\t\t<h5 className='center-align'>State Wise</h5>\n\t\t\t\t\t<Table centered={true} hoverable={true} responsive={true} striped={true}>\n\t\t\t\t\t\t<thead className='red lighten-2 white-text'>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th data-field='id'>State</th>\n\t\t\t\t\t\t\t\t<th data-field='name'>Total Cases</th>\n\t\t\t\t\t\t\t\t<th>Active</th>\n\t\t\t\t\t\t\t\t<th>Recovered</th>\n\t\t\t\t\t\t\t\t<th>Deaths</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t{states.map((state) => (\n\t\t\t\t\t\t\t\t<tr key={state.state}>\n\t\t\t\t\t\t\t\t\t<td>{state.state}</td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t{state.confirmed} {state.delta && <sub>(+{state.delta.confirmed})</sub>}\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td>{state.active}</td>\n\t\t\t\t\t\t\t\t\t<td>{state.recovered}</td>\n\t\t\t\t\t\t\t\t\t<td>{state.deaths}</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</Table>\n\t\t\t\t\t<br />\n\t\t\t\t\t<div className='center-align '>\n\t\t\t\t\t\t<span className='hide-on-med-and-up'>\n\t\t\t\t\t\t\tScroll horizontally on table to view more states.\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<blockquote>Source: covid19india.org</blockquote>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\n\t\t\t\t{/* State District Wise */}\n\t\t\t\t<section className='section'>\n\t\t\t\t\t<h5 className='center-align'>State-District Wise</h5>\n\t\t\t\t\t<Collapsible className='state-district' accordion={false}>\n\t\t\t\t\t\t{stateDistrict.map((stateVal) => (\n\t\t\t\t\t\t\t<CollapsibleItem\n\t\t\t\t\t\t\t\tkey={stateVal.state}\n\t\t\t\t\t\t\t\texpanded={false}\n\t\t\t\t\t\t\t\theader={\n\t\t\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t\t\t{stateVal.state} <i className='material-icons state-icon'>arrow_drop_down</i>\n\t\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ticon={<Icon>location_on</Icon>}\n\t\t\t\t\t\t\t\tnode='div'>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t<Table centered>\n\t\t\t\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<th data-field='id'>District</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th data-field='name'>Cases</th>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t\t{stateVal.districtData.map((distVal) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<tr key={distVal.district}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{distVal.district}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{distVal.confirmed}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</CollapsibleItem>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Collapsible>\n\t\t\t\t\t<div className='center-align'>\n\t\t\t\t\t\t<blockquote>Source: covid19india.org</blockquote>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t</div>\n\t\t);\n\t} else {\n\t\treturn <Loader />;\n\t}\n}\n\nexport default India;\n","import React, { useEffect, useState } from 'react';\nimport { Autocomplete as Auto } from 'react-materialize';\n\nfunction Autocomplete({ updateSearched }) {\n\tconst [countries, setCountries] = useState({});\n\tconst [slugs, setSlugs] = useState({});\n\n\tuseEffect(() => {\n\t\tfetch('https://api.covid19api.com/countries')\n\t\t\t.then((res) => {\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tconst obj = {};\n\t\t\t\tconst slugs = {};\n\n\t\t\t\tfor (const key of res) {\n\t\t\t\t\tif (key.Country !== '') {\n\t\t\t\t\t\tobj[key.Country.trim()] = null;\n\t\t\t\t\t\tslugs[key.Country.trim()] = key.Slug.trim();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tsetSlugs(slugs);\n\t\t\t\tsetCountries(obj);\n\t\t\t});\n\t}, []);\n\n\tconst onAutoComplete = (country) => {\n\t\tupdateSearched({\n\t\t\tname: country,\n\t\t\tslug: slugs[country],\n\t\t});\n\t};\n\n\treturn (\n\t\t<section className='center-align'>\n\t\t\t<Auto\n\t\t\t\tid='Autocomplete-1'\n\t\t\t\tclassName='autocomplete-container'\n\t\t\t\toptions={{\n\t\t\t\t\tdata: countries,\n\t\t\t\t\tlimit: 10,\n\t\t\t\t\tonAutocomplete: onAutoComplete,\n\t\t\t\t}}\n\t\t\t\tname='autocomplete'\n\t\t\t\tplaceholder='Enter a Country Name Here'\n\t\t\t/>\n\t\t</section>\n\t);\n}\n\nexport default Autocomplete;\n","import React, { useState, useEffect } from 'react';\nimport { Card, Row, Col } from 'react-materialize';\nimport Loader from './Loader';\n\nfunction Global({ country }) {\n\tconst [loading, setloading] = useState(true);\n\tconst [count, setCount] = useState({});\n\tconst [newCases, setNewCases] = useState({});\n\tconst [lastUpdated, setLastUpdated] = useState('');\n\n\tuseEffect(() => {\n\t\tif (country !== null) {\n\t\t\tfetch(`https://api.covid19api.com/summary`)\n\t\t\t\t.then((res) => res.json())\n\t\t\t\t.then((res) => {\n\t\t\t\t\tconst countries = res.Countries;\n\n\t\t\t\t\tfor (const key in countries) {\n\t\t\t\t\t\tconst current = countries[key];\n\t\t\t\t\t\tif (current['Slug'] === country.slug) {\n\t\t\t\t\t\t\tconst totalCount = {\n\t\t\t\t\t\t\t\tconfirmed: current.TotalConfirmed,\n\t\t\t\t\t\t\t\trecovered: current.TotalRecovered,\n\t\t\t\t\t\t\t\tdeaths: current.TotalDeaths,\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tconst newCount = {\n\t\t\t\t\t\t\t\tconfirmed: current.NewConfirmed,\n\t\t\t\t\t\t\t\trecovered: current.NewRecovered,\n\t\t\t\t\t\t\t\tdeaths: current.NewDeaths,\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tsetCount(totalCount);\n\t\t\t\t\t\t\tsetNewCases(newCount);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tsetLastUpdated(res.Date.slice(0, 10));\n\n\t\t\t\t\t/* Loading */\n\t\t\t\t\tsetloading(false);\n\t\t\t\t});\n\t\t}\n\t}, [country]);\n\n\tconst formatNumber = (num) => {\n\t\tif (num <= 0 || num === undefined) {\n\t\t\treturn '-';\n\t\t} else {\n\t\t\treturn new Intl.NumberFormat('en-IN', { maximumSignificantDigits: 8 }).format(num);\n\t\t}\n\t};\n\n\tif (!loading) {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h4 className='center-align'>{country.name}</h4>\n\t\t\t\t<br />\n\n\t\t\t\t{/* Total Cases */}\n\t\t\t\t<h5 className='center-align'>Count</h5>\n\t\t\t\t<section className='section'>\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t<Row className=''>\n\t\t\t\t\t\t\t<Col s={6} className='total-cases'>\n\t\t\t\t\t\t\t\t<h6 className='center-align'>Total</h6>\n\t\t\t\t\t\t\t\t<h5 className='center-align'>{formatNumber(count.confirmed)}</h5>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col s={6} className='total-recovered'>\n\t\t\t\t\t\t\t\t<h6 className='center-align'>Recovered</h6>\n\t\t\t\t\t\t\t\t<h5 className='center-align'>{formatNumber(count.recovered)}</h5>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col s={6} className='total-deaths'>\n\t\t\t\t\t\t\t\t<h6 className='center-align'>Deaths</h6>\n\t\t\t\t\t\t\t\t<h5 className='center-align'>{formatNumber(count.deaths)}</h5>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col s={6}>\n\t\t\t\t\t\t\t\t<h6 className='center-align'>Last Updated</h6>\n\t\t\t\t\t\t\t\t<h5 className='center-align'>{lastUpdated}</h5>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<div className='center-align'>\n\t\t\t\t\t\t\t<blockquote>Source: covid19api.com</blockquote>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Card>\n\t\t\t\t</section>\n\n\t\t\t\t{/* New Cases */}\n\t\t\t\t<h5 className='center-align'>New Cases</h5>\n\t\t\t\t<section className='section'>\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col s={6} className='total-cases'>\n\t\t\t\t\t\t\t\t<h5 className='center-align'>New Cases</h5>\n\t\t\t\t\t\t\t\t<h5 className='center-align'>{formatNumber(newCases.confirmed)}</h5>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col s={6} className='total-recovered'>\n\t\t\t\t\t\t\t\t<h5 className='center-align'>New Recovered</h5>\n\t\t\t\t\t\t\t\t<h5 className='center-align'>{formatNumber(newCases.recovered)}</h5>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col s={6} className='total-deaths'>\n\t\t\t\t\t\t\t\t<h5 className='center-align'>New Deaths</h5>\n\t\t\t\t\t\t\t\t<h5 className='center-align'>{formatNumber(newCases.deaths)}</h5>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col s={6}>\n\t\t\t\t\t\t\t\t<h5 className='center-align'>Last Updated</h5>\n\t\t\t\t\t\t\t\t<h5 className='center-align'>{lastUpdated}</h5>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<div className='center-align'>\n\t\t\t\t\t\t\t<blockquote>Source: covid19api.com</blockquote>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Card>\n\t\t\t\t</section>\n\t\t\t</div>\n\t\t);\n\t} else {\n\t\treturn <Loader />;\n\t}\n}\n\nexport default Global;\n","import React from 'react';\nimport { Footer as Foot } from 'react-materialize';\n\nfunction Footer() {\n\treturn (\n\t\t<Foot className='footer' copyrights='Created By Abdul Samad'>\n\t\t\t<h6 className='white-text'>Special Thanks to</h6>\n\t\t\t<ul>\n\t\t\t\t<li>\n\t\t\t\t\t<a\n\t\t\t\t\t\tclassName='grey-text text-lighten-3'\n\t\t\t\t\t\thref='https://github.com/covid19india/'\n\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\trel='noreferrer noopener'>\n\t\t\t\t\t\tCOVID-19INDIA\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<a\n\t\t\t\t\t\tclassName='grey-text text-lighten-3'\n\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\thref='https://covid19api.com/'\n\t\t\t\t\t\trel='noreferrer noopener'>\n\t\t\t\t\t\tKYLE REDELINGHUYS\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t<h6>for the API.</h6>\n\t\t</Foot>\n\t);\n}\n\nexport default Footer;\n","import React, { useState } from 'react';\nimport './App.scss';\n// eslint-disable-next-line\nimport M from 'materialize-css';\nimport Nav from './components/Nav';\nimport India from './components/India';\nimport Autocomplete from './components/Autocomplete';\nimport Global from './components/Global';\nimport Footer from './components/Footer';\n\nfunction App() {\n\tconst [country, setCountry] = useState({\n\t\tname: 'India',\n\t\tslug: 'india',\n\t});\n\n\tconst updateSearched = (country) => {\n\t\tsetCountry(country);\n\t};\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<Nav title='Covid-19 Stats' />\n\t\t\t<Autocomplete updateSearched={updateSearched} />\n\t\t\t<div className='container'>\n\t\t\t\t{country.slug === 'india' ? <India /> : <Global country={country} />}\n\t\t\t</div>\n\t\t\t<Footer />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}